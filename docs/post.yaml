components:
    schemas:
        Post:
            type: object
            required:
                - title
                - content
                - authorId
            properties:
                title:
                    type: string
                    example: "Post title"
                content:
                    type: string
                    example: "Post content"
                authorId:
                    type: integer
                    example: 1
                poster:
                    type: string
                    format: binary

paths:
    /api/posts:
        get:
            summary: Get all posts
            tags: [Posts]
            security:
                - BearerAuth: []
            responses:
                200:
                    description: All posts fetched successfully
                401:
                    description: Unauthorized
                500:
                    description: Internal server error
        post:
            summary: Create a post
            tags: [Posts]
            security:
                - BearerAuth: []
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            $ref: "#/components/schemas/Post"
            responses:
                201:
                    description: Post created successfully
                400:
                    description: Bad request
                401:
                    description: Unauthorized
                500:
                    description: Internal server error

    /api/posts/{id}:
        get:
            summary: Get post by ID
            tags: [Posts]
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: integer
            security:
                - BearerAuth: []
            responses:
                200:
                    description: Post fetched successfully
                401:
                    description: Unauthorized
                404:
                    description: Post not found
                500:
                    description: Internal server error
        put:
            summary: Update post by ID
            tags: [Posts]
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: integer
            security:
                - BearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Post"
            responses:
                200:
                    description: Post updated successfully
                400:
                    description: Bad request
                401:
                    description: Unauthorized
                404:
                    description: Post not found
                500:
                    description: Internal server error
        delete:
            summary: Delete post by ID
            tags: [Posts]
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: integer
            security:
                - BearerAuth: []
            responses:
                200:
                    description: Post deleted successfully
                401:
                    description: Unauthorized
                404:
                    description: Post not found
                500:
                    description: Internal server error
