components:
    schemas:
        Register:
            type: object
            properties:
                name:
                    type: string
                email:
                    type: string
                password:
                    type: string
                confirmPassword:
                    type: string
            example:
                name: User Example
                email: "user@example.com"
                password: "password"
                confirmPassword: "password"
        Login:
            type: object
            properties:
                email:
                    type: string
                    format: email
                password:
                    type: string
                    format: password
            example:
                email: "user@example.com"
                password: "password"

paths:
    /api/register:
        post:
            summary: Register a new user
            tags:
                - Users
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Register"
            responses:
                201:
                    description: User registered successfully
                400:
                    description: Bad request
                500:
                    description: Server error

    /api/login:
        post:
            summary: Login user
            tags:
                - Users
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Login"
            responses:
                200:
                    description: Login successful
                401:
                    description: Invalid credentials
                500:
                    description: Server error

    /api/logout:
        post:
            summary: Logout user
            tags:
                - Users
            security:
                - BearerAuth: []
            responses:
                200:
                    description: Logout successful
                401:
                    description: Unauthorized
                500:
                    description: Server error

    /api/refresh-token:
        get:
            summary: Refresh access token
            tags:
                - Users
            security:
                - BearerAuth: []
            responses:
                200:
                    description: Token refreshed successfully
                401:
                    description: Unauthorized or expired token
                500:
                    description: Server error

    /api/count-user-posts:
        get:
            summary: Get all users with their posts
            tags:
                - Users
            security:
                - BearerAuth: []
            responses:
                200:
                    description: Users fetched successfully
                401:
                    description: Unauthorized
                500:
                    description: Server error
